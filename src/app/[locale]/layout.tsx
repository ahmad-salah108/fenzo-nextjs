import type { Metadata } from "next";
import "./globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import Navbar from "./_components/Navbar";
import { getFontClassName } from "../utils/font-utils";
import { setRequestLocale } from "next-intl/server";
import { getMessages } from "next-intl/server";
import {getLangDir} from 'rtl-detect';

export const metadata: Metadata = {
	title: "Fenzo",
	description: "Generated by create next app",
	icons: {
		icon: "/assets/logo.svg",
	},
};

// Pre-render this route for all supported locales
export function generateStaticParams() {
	return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
	children,
	params: { locale },
}: {
	readonly children: React.ReactNode;
	params: { locale: string };
}) {
	// Ensure that the incoming `locale` is valid
	if (!hasLocale(routing.locales, locale)) {
		notFound();
	}

	// Enable static rendering for this locale
	setRequestLocale(locale);

	const fontClassName = getFontClassName(locale);
	const messages = await getMessages();

	const direction = getLangDir(locale); // You can use the rtl-detect package

	return (
		<html lang={locale} dir={direction} className={fontClassName}>
			<body className={`antialiased ${fontClassName} bg-background`}>
				<NextIntlClientProvider messages={messages} locale={locale}>
					<Navbar />
					{children}
				</NextIntlClientProvider>
			</body>
		</html>
	);
}
